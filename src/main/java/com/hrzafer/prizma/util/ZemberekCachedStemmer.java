package com.hrzafer.prizma.util;

import java.util.List;
import java.util.Map;

/**
 * This class is an enum because:
 * it is singleton, thread-safe and lazy-initialized
 * Uses a word-stem dictionary generated by Zemberek-3
 * If word includes apostrophe (') char this class returns the section before the apostrophe.
 */
public enum  ZemberekCachedStemmer implements Stemmer {

    Instance;

    private final String resourcePath = "/stemDict/zemberek_stemmer_cache.dict";
    private final Map<String, String> map = StemDictReader.read(resourcePath);

    @Override
    public String stem(String token) {
        String stemmed;
        int apostropheIndex = token.indexOf("\'");

        if (apostropheIndex > -1){
//            if (token.substring(0, apostropheIndex).isEmpty())
//                System.out.println(token);
            return token.substring(0, apostropheIndex);
        }
        if (map.containsKey(token)){
            return map.get(token);
        }


        return token;
    }

    @Override
    public String stem(List<String> tokens, int index) throws UnsupportedOperationException {
        return null;
    }
}
